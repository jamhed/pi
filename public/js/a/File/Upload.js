// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["a/Pi", "lib/upload"], function(aPi, FileUpload) {
  var aFileUpload, _ref;
  return aFileUpload = (function(_super) {
    __extends(aFileUpload, _super);

    function aFileUpload() {
      _ref = aFileUpload.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    aFileUpload.prototype.queue = 1;

    aFileUpload.prototype.attr = function() {
      return aFileUpload.__super__.attr.apply(this, arguments).concat(["uri", "msg", "notify"]);
    };

    aFileUpload.prototype.done = function(e, data) {
      this.queue = this.queue > 0 ? this.queue - 1 : 0;
      return this.doneFile(e, data);
    };

    aFileUpload.prototype.doneFile = function(e, data) {
      if (this.a.notify) {
        return this.pub(this.a.notify, {
          e: e,
          data: data
        });
      }
    };

    aFileUpload.prototype.doneAll = function(e) {
      if (this.a.msg) {
        return this.pub(this.a.msg, {
          e: e
        });
      }
    };

    aFileUpload.prototype.start = function() {};

    aFileUpload.prototype.stop = function(e) {
      return this.doneAll(e);
    };

    aFileUpload.prototype.init = function() {
      var _this = this;
      return this.e.fileupload({
        url: this.a.uri,
        dataType: "json",
        sequentialUploads: true,
        done: function(e, data) {
          return _this.done(e, data);
        },
        start: function(e) {
          return _this.start(e);
        },
        stop: function(e) {
          return _this.stop(e);
        },
        fail: this.queue = this.queue - 1,
        send: function(e, data) {
          _this.queue = _this.queue + 1;
          return true;
        },
        formData: {
          packet: JSON.stringify({
            query: this.rt.uri.query(true),
            data: this.data
          })
        }
      });
    };

    return aFileUpload;

  })(aPi);
});
