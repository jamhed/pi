// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["a/Pi", "lib/doT", "lib/jquery-ui"], function(aPi, doT, jqUI, aDialogSimple) {
  var aAjaxError, _ref;
  return aAjaxError = (function(_super) {
    __extends(aAjaxError, _super);

    function aAjaxError() {
      _ref = aAjaxError.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    aAjaxError.prototype.tmpl = null;

    aAjaxError.prototype.dialog_e = null;

    aAjaxError.prototype.init = function() {
      var _this = this;
      this.sub("close", function() {
        return _this.dialog_e.remove();
      });
      this.tmpl = doT.template(this.e.html());
      return $(document).ajaxError(function() {
        return _this.onError.apply(_this, arguments);
      });
    };

    aAjaxError.prototype.onError = function(event, jqXHR, ajaxSettings, thrownError) {
      var blob, dialog, e, server_error;
      try {
        blob = $.parseJSON(jqXHR.responseText);
        server_error = blob.error;
      } catch (_error) {
        e = _error;
      }
      dialog = $("<div>").append(this.tmpl({
        error: thrownError,
        uri: ajaxSettings.url,
        method: ajaxSettings.type,
        server_error: server_error,
        responseText: jqXHR.responseText
      }));
      return this.rt.pi(dialog);
    };

    return aAjaxError;

  })(aPi);
});
