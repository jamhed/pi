// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["a/El", "lib/URI/URI", "lib/jquery-ui"], function(aPi, URI) {
  var aDialog;
  return aDialog = (function(_super) {
    __extends(aDialog, _super);

    aDialog.prototype.dialog_e = null;

    aDialog.prototype.attr = function() {
      return aDialog.__super__.attr.apply(this, arguments).concat(["name", "msg"]);
    };

    function aDialog() {
      var _this = this;
      aDialog.__super__.constructor.apply(this, arguments);
      this.sub("close", function() {
        return _this.dialog_e.remove();
      });
      this.sub("save", function(ev, data) {
        return _this.save(data);
      });
    }

    aDialog.prototype.init = function() {
      var _this = this;
      this.uri = URI("#" + this.a.uri);
      return this.e.click(function() {
        return _this.load();
      });
    };

    aDialog.prototype.save = function(data) {
      var _this = this;
      return this.post(this.uri.fragment(), data.data, function() {
        if (_this.a.msg) {
          _this.pub(_this.a.msg, data);
        }
        return _this.dialog_e.remove();
      });
    };

    aDialog.prototype.set = function(r) {
      var dialog, options,
        _this = this;
      dialog = $(this.rt.source(this.a.name, r));
      options = dialog.data();
      this.dialog_e = dialog.dialog({
        close: function(ev, ui) {
          return _this.dialog_e.remove();
        },
        draggable: true,
        width: options.width || 500
      });
      return this.rt.pi(this.dialog_e, function() {});
    };

    return aDialog;

  })(aPi);
});
