// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["a/El/Editable", "m/Code/Mirror", "lib/highlight"], function(aElEditable, mCodeMirror, HL) {
  var elCode;
  return elCode = (function(_super) {
    __extends(elCode, _super);

    elCode.prototype.attr = function() {
      return elCode.__super__.attr.apply(this, arguments).concat(["syntax"]);
    };

    function elCode() {
      var _base;
      elCode.__super__.constructor.apply(this, arguments);
      if ((_base = this.a).syntax == null) {
        _base.syntax = "coffeescript";
      }
    }

    elCode.prototype.get = function() {
      return this.editor.content();
    };

    elCode.prototype.set = function(text) {
      this.text = text;
      return $("<code></code>").addClass(this.a.syntax).appendTo($("<pre></pre>").css("line-height", "14px").appendTo(this.e.empty())).html(HL.highlight(this.a.syntax, this.text).value);
    };

    elCode.prototype.edit = function() {
      this.e.empty();
      return this.editor = new mCodeMirror(this.e, this.a.syntax, this.text);
    };

    return elCode;

  })(aElEditable);
});
