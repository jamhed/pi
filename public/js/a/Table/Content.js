// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["a/Pi"], function(aPi) {
  var aTableContent, _ref;
  return aTableContent = (function(_super) {
    __extends(aTableContent, _super);

    function aTableContent() {
      _ref = aTableContent.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    aTableContent.prototype.tmpl = null;

    aTableContent.prototype.attr = function() {
      return aTableContent.__super__.attr.apply(this, arguments).concat(["sub", "row"]);
    };

    aTableContent.prototype.init = function() {
      var table,
        _this = this;
      this.sub(this.a.sub, function(ev, args, caller) {
        return _this.onData(args.rr);
      });
      this.tmpl = this.rt.source(this.a.row);
      table = RegExp("^(.+)\@").exec(this.a.sub)[1];
      if (table) {
        return this.pub("" + table + "@content/check", {
          callback: function(r) {
            return _this.onData(r.rr);
          }
        });
      }
    };

    aTableContent.prototype.onData = function(rr) {
      var row, _i, _len;
      this.e.empty();
      for (_i = 0, _len = rr.length; _i < _len; _i++) {
        row = rr[_i];
        this.e.append(this.tmpl({
          o: row
        }));
      }
      return this.rt.pi(this.e);
    };

    return aTableContent;

  })(aPi);
});
