// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["a/Pi"], function(aPi) {
  var aPager;
  return aPager = (function(_super) {
    __extends(aPager, _super);

    aPager.prototype.filter = null;

    aPager.prototype.sorter = null;

    aPager.prototype.page = 0;

    aPager.prototype.attr = function() {
      return aPager.__super__.attr.apply(this, arguments).concat(["prefix", "uri", "row", "msg", "filter"]);
    };

    function aPager() {
      this.filter = [];
      this.sorter = {};
      aPager.__super__.constructor.apply(this, arguments);
    }

    aPager.prototype.onSort = function(a) {
      this.sorter[a.name] = a.state;
      this.globalSet("sorter", JSON.stringify(this.sorter));
      this.page = 0;
      return this.load();
    };

    aPager.prototype.init = function() {
      var filter, sorter, _base, _base1,
        _this = this;
      this.sub("sort", function(ev, a) {
        return _this.onSort(a);
      });
      this.sub("filter", function(ev, data) {
        var _ref;
        if (data && data.data) {
          _this.filter = (data != null ? (_ref = data.data) != null ? _ref.form : void 0 : void 0) || [];
          _this.globalSet("filter", JSON.stringify(_this.filter));
        }
        _this.page = 0;
        return _this.load();
      });
      this.sub("forward", function(ev, data) {
        return _this.forward(data || 1);
      });
      this.sub("backward", function(ev, data) {
        return _this.backward(data || 1);
      });
      this.sub("reload", function(ev, data) {
        return _this.load();
      });
      this.sub("init", function(ev, data) {
        if (_this.a.msg) {
          return _this.pub(_this.a.msg, _this.r);
        }
      });
      if ((_base = this.a).uri == null) {
        _base.uri = this.a.prefix + "/table";
      }
      if ((_base1 = this.a).row == null) {
        _base1.row = this.a.prefix + "/row";
      }
      filter = this.globalGet("filter");
      if (filter) {
        this.filter = JSON.parse(filter);
      }
      sorter = this.globalGet("sorter");
      if (sorter) {
        this.sorter = JSON.parse(sorter);
      }
      this.page = this.globalGet("page") || 0;
      return this.load();
    };

    aPager.prototype.load = function() {
      var _this = this;
      return this.post(this.a.uri, {
        filter: this.filter,
        sorter: this.sorter,
        page: this.page
      }, function(r) {
        return _this.onData(r);
      });
    };

    aPager.prototype.forward = function(n) {
      this.page = this.page + n >= this.r.page_count ? this.r.page_count - 1 : this.page + n;
      this.globalSet("page", this.page);
      return this.load();
    };

    aPager.prototype.backward = function(n) {
      this.page = this.page - n < 0 ? 0 : this.page - n;
      this.globalSet("page", this.page);
      return this.load();
    };

    aPager.prototype.onData = function(r) {
      var row, tmpl, _i, _len, _ref;
      this.r = r;
      tmpl = this.rt.source(this.a.row);
      this.e.empty();
      _ref = r.rr;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        row = _ref[_i];
        this.e.append(tmpl({
          o: row
        }));
      }
      this.rt.pi(this.e);
      if (this.a.msg) {
        this.pub(this.a.msg, r);
      }
      this.page = parseInt(this.r.page);
      this.globalSet("page", this.page);
      if (r.filter && r.filter.filter_init && this.a.filter) {
        return this.pub(this.a.filter, r.filter);
      }
    };

    return aPager;

  })(aPi);
});
