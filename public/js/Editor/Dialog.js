// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["a/El", "m/Source", "lib/jquery-ui"], function(aPi, mSource, URI) {
  var aEditorDialog;
  return aEditorDialog = (function(_super) {
    __extends(aEditorDialog, _super);

    aEditorDialog.prototype.attr = function() {
      return aEditorDialog.__super__.attr.apply(this, arguments).concat(["name", "ref"]);
    };

    function aEditorDialog() {
      var _this = this;
      aEditorDialog.__super__.constructor.apply(this, arguments);
      this.sub("close", function() {
        return _this.dialog_e.remove();
      });
      this.sub("save", function(ev, data) {
        return _this.save(data);
      });
    }

    aEditorDialog.prototype.init = function() {
      var _this = this;
      return this.e.click(function() {
        return _this.load();
      });
    };

    aEditorDialog.prototype.load = function() {
      var dialog, img, r, tmpl,
        _this = this;
      tmpl = mSource.get(this.a.name);
      r = this.e.data();
      img = $(this.a.ref);
      r.width = img[0].naturalWidth;
      r.height = img[0].naturalHeight;
      dialog = $(tmpl(r));
      this.dialog_e = dialog.dialog({
        close: function(ev, ui) {
          return _this.dialog_e.remove();
        },
        draggable: true,
        resizable: false,
        width: "auto",
        height: "auto"
      });
      return this.rt.pi(this.dialog_e);
    };

    return aEditorDialog;

  })(aPi);
});
